<?php

/**
 * This is the model base class for the table "users".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Users".
 *
 * Columns in table "users" available as properties of the model,
 * followed by relations of table "users" available as properties of the model.
 *
 * @property string $ID
 * @property integer $VIRTUAL
 * @property string $name
 * @property string $surname
 * @property string $email
 * @property string $md5_pass
 * @property string $time_registered
 * @property string $time_updated
 * @property string $avatar_link
 * @property string $time_per_week
 * @property integer $newsletter
 * @property integer $language_id
 * @property integer $country_id
 * @property string $city_id
 * @property string $address
 * @property integer $deleted
 *
 * @property IdeasMembers[] $ideasMembers
 * @property Languages $language
 * @property Cities $city
 * @property Countries $country
 * @property UsersCollabprefs[] $usersCollabprefs
 * @property UsersLinks[] $usersLinks
 * @property UsersSkills[] $usersSkills
 */
abstract class BaseUsers extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'users';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Users|Users', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('VIRTUAL, time_registered, time_updated, language_id, deleted', 'required'),
			array('VIRTUAL, newsletter, language_id, country_id, deleted', 'numerical', 'integerOnly'=>true),
			array('name, surname, email, avatar_link, address', 'length', 'max'=>128),
			array('md5_pass', 'length', 'max'=>32),
			array('time_registered, time_updated', 'length', 'max'=>11),
			array('time_per_week', 'length', 'max'=>3),
			array('city_id', 'length', 'max'=>10),
			array('name, surname, email, md5_pass, avatar_link, time_per_week, newsletter, country_id, city_id, address', 'default', 'setOnEmpty' => true, 'value' => null),
			array('ID, VIRTUAL, name, surname, email, md5_pass, time_registered, time_updated, avatar_link, time_per_week, newsletter, language_id, country_id, city_id, address, deleted', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'ideasMembers' => array(self::HAS_MANY, 'IdeasMembers', 'user_id'),
			'language' => array(self::BELONGS_TO, 'Languages', 'language_id'),
			'city' => array(self::BELONGS_TO, 'Cities', 'city_id'),
			'country' => array(self::BELONGS_TO, 'Countries', 'country_id'),
			'usersCollabprefs' => array(self::HAS_MANY, 'UsersCollabprefs', 'user_id'),
			'usersLinks' => array(self::HAS_MANY, 'UsersLinks', 'user_id'),
			'usersSkills' => array(self::HAS_MANY, 'UsersSkills', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'ID' => Yii::t('app', 'ID'),
			'VIRTUAL' => Yii::t('app', 'Virtual'),
			'name' => Yii::t('app', 'Name'),
			'surname' => Yii::t('app', 'Surname'),
			'email' => Yii::t('app', 'Email'),
			'md5_pass' => Yii::t('app', 'Md5 Pass'),
			'time_registered' => Yii::t('app', 'Time Registered'),
			'time_updated' => Yii::t('app', 'Time Updated'),
			'avatar_link' => Yii::t('app', 'Avatar Link'),
			'time_per_week' => Yii::t('app', 'Time Per Week'),
			'newsletter' => Yii::t('app', 'Newsletter'),
			'language_id' => null,
			'country_id' => null,
			'city_id' => null,
			'address' => Yii::t('app', 'Address'),
			'deleted' => Yii::t('app', 'Deleted'),
			'ideasMembers' => null,
			'language' => null,
			'city' => null,
			'country' => null,
			'usersCollabprefs' => null,
			'usersLinks' => null,
			'usersSkills' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('ID', $this->ID, true);
		$criteria->compare('VIRTUAL', $this->VIRTUAL);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('surname', $this->surname, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('md5_pass', $this->md5_pass, true);
		$criteria->compare('time_registered', $this->time_registered, true);
		$criteria->compare('time_updated', $this->time_updated, true);
		$criteria->compare('avatar_link', $this->avatar_link, true);
		$criteria->compare('time_per_week', $this->time_per_week, true);
		$criteria->compare('newsletter', $this->newsletter);
		$criteria->compare('language_id', $this->language_id);
		$criteria->compare('country_id', $this->country_id);
		$criteria->compare('city_id', $this->city_id);
		$criteria->compare('address', $this->address, true);
		$criteria->compare('deleted', $this->deleted);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}