<?php

/**
 * This is the model base class for the table "invite".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Invite".
 *
 * Columns in table "invite" available as properties of the model,
 * followed by relations of table "invite" available as properties of the model.
 *
 * @property integer $id
 * @property string $id_sender
 * @property string $key
 * @property string $email
 * @property string $id_idea
 * @property string $id_receiver
 *
 * @property User $idSender
 * @property Idea $idIdea
 * @property User $idReceiver
 */
abstract class BaseInvite extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'invite';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Invite|Invites', $n);
	}

	public static function representingColumn() {
		return 'email';
	}

	public function rules() {
		return array(
			array('id_sender, email', 'required'),
			//array('email', 'unique'),
      array('email', 'unique', 'criteria'=>array(
            'condition'=>'`id_idea`=:idIdea OR ISNULL(id_idea)',
            'params'=>array(
                ':idIdea'=>$this->id_idea,
            )
        )),        
			array('id_sender, id_idea, id_receiver', 'length', 'max'=>11),
			array('key, email', 'length', 'max'=>50),
			array('key, id_idea, id_receiver', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, id_sender, key, email, id_idea, id_receiver', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idSender' => array(self::BELONGS_TO, 'User', 'id_sender'),
			'idIdea' => array(self::BELONGS_TO, 'Idea', 'id_idea'),
			'idReceiver' => array(self::BELONGS_TO, 'User', 'id_receiver'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'id_sender' => null,
			'key' => Yii::t('app', 'Key'),
			'email' => Yii::t('app', 'Email'),
			'id_idea' => null,
			'id_receiver' => null,
			'idSender' => null,
			'idIdea' => null,
			'idReceiver' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('id_sender', $this->id_sender);
		$criteria->compare('key', $this->key, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('id_idea', $this->id_idea);
		$criteria->compare('id_receiver', $this->id_receiver);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}